import multiprocessing as mp
import os
import sys


def process_report(filename, input_dir, output_dir, verdict):
    return None


def main():
    if len(sys.argv) != 4:
        print(f'Usage: python {sys.argv[0]} <input dir> <output dir> <0/1>')
        exit()

    input_dir = sys.argv[1]
    output_dir = sys.argv[2]

    if sys.argv[3] == '1':
        verdict = 1 # Malicious.
    elif sys.argv[3] == '0':
        verdict = 0 # Benign.
    else:
        print(f'Usage: python {sys.argv[0]} <input dir> <output dir> <0/1>')
        exit()

    pool = mp.Pool(mp.cpu_count())
    for filename in os.listdir(input_dir):
        pool.apply_async(process_report, args=(filename, input_dir, output_dir, verdict))
    pool.close()
    pool.join()


if __name__ == "__main__":
    main()
